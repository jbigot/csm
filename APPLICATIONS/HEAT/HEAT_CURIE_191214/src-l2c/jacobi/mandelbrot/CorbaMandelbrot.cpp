// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "CorbaMandelbrot.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



cmandelbrot::MandelbrotManagement_ptr cmandelbrot::MandelbrotManagement_Helper::_nil() {
  return ::cmandelbrot::MandelbrotManagement::_nil();
}

::CORBA::Boolean cmandelbrot::MandelbrotManagement_Helper::is_nil(::cmandelbrot::MandelbrotManagement_ptr p) {
  return ::CORBA::is_nil(p);

}

void cmandelbrot::MandelbrotManagement_Helper::release(::cmandelbrot::MandelbrotManagement_ptr p) {
  ::CORBA::release(p);
}

void cmandelbrot::MandelbrotManagement_Helper::marshalObjRef(::cmandelbrot::MandelbrotManagement_ptr obj, cdrStream& s) {
  ::cmandelbrot::MandelbrotManagement::_marshalObjRef(obj, s);
}

cmandelbrot::MandelbrotManagement_ptr cmandelbrot::MandelbrotManagement_Helper::unmarshalObjRef(cdrStream& s) {
  return ::cmandelbrot::MandelbrotManagement::_unmarshalObjRef(s);
}

void cmandelbrot::MandelbrotManagement_Helper::duplicate(::cmandelbrot::MandelbrotManagement_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

cmandelbrot::MandelbrotManagement_ptr
cmandelbrot::MandelbrotManagement::_duplicate(::cmandelbrot::MandelbrotManagement_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

cmandelbrot::MandelbrotManagement_ptr
cmandelbrot::MandelbrotManagement::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


cmandelbrot::MandelbrotManagement_ptr
cmandelbrot::MandelbrotManagement::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

cmandelbrot::MandelbrotManagement_ptr
cmandelbrot::MandelbrotManagement::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_MandelbrotManagement _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_MandelbrotManagement* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_MandelbrotManagement;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* cmandelbrot::MandelbrotManagement::_PD_repoId = "IDL:cmandelbrot/MandelbrotManagement:1.0";


cmandelbrot::_objref_MandelbrotManagement::~_objref_MandelbrotManagement() {
  
}


cmandelbrot::_objref_MandelbrotManagement::_objref_MandelbrotManagement(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::cmandelbrot::MandelbrotManagement::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
cmandelbrot::_objref_MandelbrotManagement::_ptrToObjRef(const char* id)
{
  if (id == ::cmandelbrot::MandelbrotManagement::_PD_repoId)
    return (::cmandelbrot::MandelbrotManagement_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::cmandelbrot::MandelbrotManagement::_PD_repoId))
    return (::cmandelbrot::MandelbrotManagement_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for cmandelbrot::MandelbrotManagement::dump

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_84a9694bff3b56cf_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_84a9694bff3b56cf_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_84a9694bff3b56cf_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_84a9694bff3b56cf_10000000(omniCallDescriptor*, omniServant* svnt)
{
  
  cmandelbrot::_impl_MandelbrotManagement* impl = (cmandelbrot::_impl_MandelbrotManagement*) svnt->_ptrToInterface(cmandelbrot::MandelbrotManagement::_PD_repoId);
  impl->dump();


}

void cmandelbrot::_objref_MandelbrotManagement::dump()
{
  _0RL_cd_84a9694bff3b56cf_00000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_10000000, "dump", 5);


  _invoke(_call_desc);



}


//
// Code for cmandelbrot::MandelbrotManagement::get_info

// Proxy call descriptor class. Mangled signature:
//  void_o_ccmandelbrot_mdataULong__t_o_ccmandelbrot_marea__t_o_cunsigned_plong_o_cunsigned_plong
class _0RL_cd_84a9694bff3b56cf_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_84a9694bff3b56cf_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  cmandelbrot::dataULong_t_var arg_0;
  cmandelbrot::area_t_var arg_1;
  ::CORBA::ULong arg_2;
  ::CORBA::ULong arg_3;
};

void _0RL_cd_84a9694bff3b56cf_20000000::marshalReturnedValues(cdrStream& _n)
{
  (const cmandelbrot::dataULong_t&) arg_0 >>= _n;
  (const cmandelbrot::area_t&) arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;

}

void _0RL_cd_84a9694bff3b56cf_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_0 = new cmandelbrot::dataULong_t;
  (cmandelbrot::dataULong_t&)arg_0 <<= _n;
  arg_1 = new cmandelbrot::area_t;
  (cmandelbrot::area_t&)arg_1 <<= _n;
  (::CORBA::ULong&)arg_2 <<= _n;
  (::CORBA::ULong&)arg_3 <<= _n;

}

const char* const _0RL_cd_84a9694bff3b56cf_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_84a9694bff3b56cf_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_84a9694bff3b56cf_20000000* tcd = (_0RL_cd_84a9694bff3b56cf_20000000*)cd;
  cmandelbrot::_impl_MandelbrotManagement* impl = (cmandelbrot::_impl_MandelbrotManagement*) svnt->_ptrToInterface(cmandelbrot::MandelbrotManagement::_PD_repoId);
  impl->get_info(tcd->arg_0.out(), tcd->arg_1.out(), tcd->arg_2, tcd->arg_3);


}

void cmandelbrot::_objref_MandelbrotManagement::get_info(::cmandelbrot::dataULong_t_out data, ::cmandelbrot::area_t_out area, ::CORBA::ULong& nx, ::CORBA::ULong& ny)
{
  _0RL_cd_84a9694bff3b56cf_20000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_30000000, "get_info", 9);


  _invoke(_call_desc);
  data = _call_desc.arg_0._retn();
  area = _call_desc.arg_1._retn();
  nx = _call_desc.arg_2;
  ny = _call_desc.arg_3;


}


//
// Code for cmandelbrot::MandelbrotManagement::compute

// Local call call-back function.
static void
_0RL_lcfn_84a9694bff3b56cf_40000000(omniCallDescriptor*, omniServant* svnt)
{
  
  cmandelbrot::_impl_MandelbrotManagement* impl = (cmandelbrot::_impl_MandelbrotManagement*) svnt->_ptrToInterface(cmandelbrot::MandelbrotManagement::_PD_repoId);
  impl->compute();


}

void cmandelbrot::_objref_MandelbrotManagement::compute()
{
  _0RL_cd_84a9694bff3b56cf_00000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_40000000, "compute", 8);


  _invoke(_call_desc);



}

cmandelbrot::_pof_MandelbrotManagement::~_pof_MandelbrotManagement() {}


omniObjRef*
cmandelbrot::_pof_MandelbrotManagement::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::cmandelbrot::_objref_MandelbrotManagement(ior, id);
}


::CORBA::Boolean
cmandelbrot::_pof_MandelbrotManagement::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::cmandelbrot::MandelbrotManagement::_PD_repoId))
    return 1;
  
  return 0;
}

const cmandelbrot::_pof_MandelbrotManagement _the_pof_cmandelbrot_mMandelbrotManagement;

cmandelbrot::_impl_MandelbrotManagement::~_impl_MandelbrotManagement() {}


::CORBA::Boolean
cmandelbrot::_impl_MandelbrotManagement::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "dump")) {

    _0RL_cd_84a9694bff3b56cf_00000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_10000000, "dump", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "get_info")) {

    _0RL_cd_84a9694bff3b56cf_20000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_30000000, "get_info", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "compute")) {

    _0RL_cd_84a9694bff3b56cf_00000000 _call_desc(_0RL_lcfn_84a9694bff3b56cf_40000000, "compute", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
cmandelbrot::_impl_MandelbrotManagement::_ptrToInterface(const char* id)
{
  if (id == ::cmandelbrot::MandelbrotManagement::_PD_repoId)
    return (::cmandelbrot::_impl_MandelbrotManagement*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::cmandelbrot::MandelbrotManagement::_PD_repoId))
    return (::cmandelbrot::_impl_MandelbrotManagement*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
cmandelbrot::_impl_MandelbrotManagement::_mostDerivedRepoId()
{
  return ::cmandelbrot::MandelbrotManagement::_PD_repoId;
}

POA_cmandelbrot::MandelbrotManagement::~MandelbrotManagement() {}

