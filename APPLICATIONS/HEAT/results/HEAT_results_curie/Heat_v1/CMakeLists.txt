project(heat_v1)
cmake_minimum_required(VERSION 2.8)

include_directories(l2c)
include_directories(src)
include_directories(include)

set (CMAKE_CXX_FLAGS "-O2")
#set (CMAKE_CXX_FLAGS "-O2 -g")

include(FindMPI)
if(NOT ${MPI_FOUND})
  message(SEND_ERROR "no MPI found, mhello module will not be compiled")
endif(NOT ${MPI_FOUND})

include_directories(${MPI_INCLUDE_PATH} include)

add_library(Driver MODULE src/Driver/Driver.cpp)
target_link_libraries(Driver ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Driver PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Driver PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Driver LIBRARY DESTINATION lib)

add_library(DriverApp MODULE src/DriverApp/DriverApp.cpp)
target_link_libraries(DriverApp ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(DriverApp PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(DriverApp PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS DriverApp LIBRARY DESTINATION lib)

add_library(DriverAppOnly MODULE src/DriverApp/DriverAppOnly.cpp)
target_link_libraries(DriverAppOnly ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(DriverAppOnly PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(DriverAppOnly PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS DriverAppOnly LIBRARY DESTINATION lib)

add_library(Structure MODULE src/Structure/Struct.cpp)
target_link_libraries(Structure ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Structure PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Structure PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Structure LIBRARY DESTINATION lib)

add_library(Data MODULE src/Data/Data.cpp)
target_link_libraries(Data ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Data PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Data PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Data LIBRARY DESTINATION lib)

add_library(Phase MODULE src/Phase/Phase.cpp)
target_link_libraries(Phase ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Phase PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Phase PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Phase LIBRARY DESTINATION lib)

add_library(Time MODULE src/Time/Time.cpp)
target_link_libraries(Time ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Time PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Time PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Time LIBRARY DESTINATION lib)

add_library(Space MODULE src/Space/Space.cpp)
target_link_libraries(Space ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Space PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Space PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Space LIBRARY DESTINATION lib)

add_library(Space_sk MODULE src/Space/Space_sk.cpp)
target_link_libraries(Space_sk ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Space_sk PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Space_sk PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Space_sk LIBRARY DESTINATION lib)

add_library(Initializer MODULE src/Initializer/Initializer.cpp)
target_link_libraries(Initializer ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Initializer PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Initializer PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Initializer LIBRARY DESTINATION lib)

install(DIRECTORY include/ DESTINATION include/ FILES_MATCHING PATTERN "*.h" PATTERN "*/*" EXCLUDE)
install(DIRECTORY lad/ DESTINATION lib/lad/ FILES_MATCHING PATTERN "*.lad")
