#ifndef APPLYLIST_H
#define APPLYLIST_H

#include <vector>

namespace skelgis{

  //================================================================================
  //Types of user functions
  //-------------------------------------------------------------------------------
  struct _ApplyList_Func
  //-------------------------------------------------------------------------------
  {
    virtual void operator()(std::vector<Data *>&,std::vector<Data *>&) const =0;
  };
  //================================================================================

  //================================================================================
  //specializations of skeleton ApplyList
  //-------------------------------------------------------------------------------
  //------------------------------------------------------------------------
  struct ApplyList
  //-------------------------------------------------------------------------------
  {
    static void apply(const _ApplyList_Func& func,std::vector<Data *>& inputs, std::vector<Data *>& outputs)
    {
      /*for(int i=0;i<inputs.size();i++)
	{
	  Data * m = inputs[i];
	  m->update();
	  }*/
      func(inputs,outputs);
    }
  };
  //-------------------------------------------------------------------------------
}

#endif
