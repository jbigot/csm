project(heat_v1)
cmake_minimum_required(VERSION 2.8)

include_directories(l2c)
include_directories(src)
include_directories(include)

set (CMAKE_CXX_FLAGS "-O2")
#set (CMAKE_CXX_FLAGS "-O2 -g")

include(FindMPI)
if(NOT ${MPI_FOUND})
  message(SEND_ERROR "no MPI found, mhello module will not be compiled")
endif(NOT ${MPI_FOUND})

include_directories(${MPI_INCLUDE_PATH} include)

add_library(Driver MODULE src/Driver/Driver.cpp)
target_link_libraries(Driver ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Driver PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Driver PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Driver LIBRARY DESTINATION lib)

add_library(DriverApp MODULE src/DriverApp/DriverApp.cpp)
target_link_libraries(DriverApp ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(DriverApp PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(DriverApp PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS DriverApp LIBRARY DESTINATION lib)

add_library(DriverAppOnly MODULE src/DriverApp/DriverAppOnly.cpp)
target_link_libraries(DriverAppOnly ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(DriverAppOnly PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(DriverAppOnly PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS DriverAppOnly LIBRARY DESTINATION lib)

add_library(Structure MODULE src/Structure/Struct.cpp)
target_link_libraries(Structure ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Structure PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Structure PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Structure LIBRARY DESTINATION lib)

add_library(Data MODULE src/Data/Data.cpp)
target_link_libraries(Data ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Data PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Data PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Data LIBRARY DESTINATION lib)

add_library(Phase MODULE src/Phase/Phase.cpp)
target_link_libraries(Phase ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Phase PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Phase PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Phase LIBRARY DESTINATION lib)

add_library(PhaseO MODULE src/Phase/PhaseO.cpp)
target_link_libraries(PhaseO ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(PhaseO PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(PhaseO PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS PhaseO LIBRARY DESTINATION lib)

add_library(Time MODULE src/Time/Time.cpp)
target_link_libraries(Time ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Time PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Time PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Time LIBRARY DESTINATION lib)

add_library(TimeO MODULE src/Time/TimeO.cpp)
target_link_libraries(TimeO ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(TimeO PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(TimeO PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS TimeO LIBRARY DESTINATION lib)

add_library(Group MODULE src/Group/Group.cpp)
target_link_libraries(Group ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Group PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Group PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Group LIBRARY DESTINATION lib)

add_library(GroupThread MODULE src/Group/GroupThread.cpp)
target_link_libraries(GroupThread ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(GroupThread PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(GroupThread PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS GroupThread LIBRARY DESTINATION lib)

#####################KERNELS

add_library(Kbloc1x1 MODULE src/Kernels/Kbloc1x1.cpp)
target_link_libraries(Kbloc1x1 ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kbloc1x1 PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kbloc1x1 PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kbloc1x1 LIBRARY DESTINATION lib)

add_library(Kbloc1y1 MODULE src/Kernels/Kbloc1y1.cpp)
target_link_libraries(Kbloc1y1 ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kbloc1y1 PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kbloc1y1 PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kbloc1y1 LIBRARY DESTINATION lib)

add_library(Kbloc21 MODULE src/Kernels/Kbloc21.cpp)
target_link_libraries(Kbloc21 ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kbloc21 PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kbloc21 PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kbloc21 LIBRARY DESTINATION lib)

add_library(Kcheck MODULE src/Kernels/Kcheck.cpp)
target_link_libraries(Kcheck ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kcheck PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kcheck PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kcheck LIBRARY DESTINATION lib)

add_library(Kdelzf MODULE src/Kernels/Kdelzf.cpp)
target_link_libraries(Kdelzf ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kdelzf PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kdelzf PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kdelzf LIBRARY DESTINATION lib)

add_library(Kdelzc1f MODULE src/Kernels/Kdelzc1f.cpp)
target_link_libraries(Kdelzc1f ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kdelzc1f PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kdelzc1f PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kdelzc1f LIBRARY DESTINATION lib)

add_library(Kdelzc2f MODULE src/Kernels/Kdelzc2f.cpp)
target_link_libraries(Kdelzc2f ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kdelzc2f PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kdelzc2f PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kdelzc2f LIBRARY DESTINATION lib)

add_library(Kheun1 MODULE src/Kernels/Kheun1.cpp)
target_link_libraries(Kheun1 ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Kheun1 PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Kheun1 PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Kheun1 LIBRARY DESTINATION lib)

add_library(Khuvh1l MODULE src/Kernels/Khuvh1l.cpp)
target_link_libraries(Khuvh1l ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Khuvh1l PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Khuvh1l PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Khuvh1l LIBRARY DESTINATION lib)

add_library(Khuvh2l MODULE src/Kernels/Khuvh2l.cpp)
target_link_libraries(Khuvh2l ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Khuvh2l PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Khuvh2l PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Khuvh2l LIBRARY DESTINATION lib)

add_library(Klimhd MODULE src/Kernels/Klimhd.cpp)
target_link_libraries(Klimhd ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Klimhd PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Klimhd PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Klimhd LIBRARY DESTINATION lib)

add_library(Klimhl MODULE src/Kernels/Klimhl.cpp)
target_link_libraries(Klimhl ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Klimhl PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Klimhl PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Klimhl LIBRARY DESTINATION lib)

add_library(Klimhr MODULE src/Kernels/Klimhr.cpp)
target_link_libraries(Klimhr ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Klimhr PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Klimhr PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Klimhr LIBRARY DESTINATION lib)

add_library(Klimhu MODULE src/Kernels/Klimhu.cpp)
target_link_libraries(Klimhu ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Klimhu PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Klimhu PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Klimhu LIBRARY DESTINATION lib)

######################

add_library(Initializer MODULE src/Initializer/Initializer.cpp)
target_link_libraries(Initializer ${MPI_LIBRARIES})
foreach(COMPILE_FLAG IN LISTS MPI_COMPILE_FLAGS)
        set_target_properties(Initializer PROPERTIES COMPILE_FLAGS ${COMPILE_FLAG})
endforeach(COMPILE_FLAG)
foreach(LINK_FLAG IN LISTS MPI_LINK_FLAGS)
        set_target_properties(Initializer PROPERTIES LINK_FLAGS ${LINK_FLAG})
endforeach(LINK_FLAG)
install(TARGETS Initializer LIBRARY DESTINATION lib)

install(DIRECTORY include/ DESTINATION include/ FILES_MATCHING PATTERN "*.h" PATTERN "*/*" EXCLUDE)
install(DIRECTORY lad/ DESTINATION lib/lad/ FILES_MATCHING PATTERN "*.lad")
